{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/data-table/data-table.component.html","webpack:///./src/app/components/data-table/data-table.component.less","webpack:///./src/app/components/data-table/data-table.component.ts","webpack:///./src/app/components/data-tree/data-tree.component.html","webpack:///./src/app/components/data-tree/data-tree.component.less","webpack:///./src/app/components/data-tree/data-tree.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.less","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/option-form/option-form.component.html","webpack:///./src/app/components/option-form/option-form.component.less","webpack:///./src/app/components/option-form/option-form.component.ts","webpack:///./src/app/components/sql-input/sql-input.component.html","webpack:///./src/app/components/sql-input/sql-input.component.less","webpack:///./src/app/components/sql-input/sql-input.component.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACM;AACQ;AACyB;AACd;AACoB;AACH;AACH;AAEhF,IAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,2FAAiB;KAC7B;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,6EAAa;KACzB;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,UAAU,EAAE,QAAQ;KACrB;CACF,CAAC;AAaF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAX5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,eAAe,EAAE,CAAC,iGAAmB,EAAE,8FAAkB,EAAE,2FAAiB,CAAC;SAC9E,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpC7B,wJAAwJ,sbAAsb,MAAM,oE;;;;;;;;;;;ACAplB,4BAA4B,qBAAqB,sBAAsB,GAAG,aAAa,oBAAoB,gBAAgB,iBAAiB,GAAG,cAAc,oBAAoB,qBAAqB,8BAA8B,GAAG,aAAa,uBAAuB,4BAA4B,oBAAoB,gBAAgB,YAAY,cAAc,gBAAgB,GAAG,eAAe,iBAAiB,GAAG,G;;;;;;;;;;;;;;;;;;;;;ACAjX;AAO1C;IALA;QAME,SAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACgC;AACb;AACV;AACU;AACb;AACT;AACwB;AACW;AACd;AACoB;AACH;AACH;AAG/E,0EAAkB,CAAC,iEAAE,CAAC,CAAC;AAsBvB;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,4FAAiB;gBACjB,8EAAa;gBACb,kGAAmB;gBACnB,+FAAkB;gBAClB,4FAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,0DAAW,EAAE,kEAAmB;gBAChC,qEAAgB;gBAChB,+DAAiB;gBACjB,gFAAgB;aACjB;YACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,qDAAO,EAAE,QAAQ,EAAE,mDAAK,EAAE,CAAC;YAClD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxCtB,g2BAAg2B,iBAAiB,yLAAyL,uBAAuB,uEAAuE,uBAAuB,6N;;;;;;;;;;;ACA/pC,gCAAgC,eAAe,oBAAoB,WAAW,YAAY,gBAAgB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3D;AACO;AACI;AACpB;AAOzC;IAWE,4BACU,WAAwB,EACxB,cAAgC,EAChC,QAAoB;QAFpB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAkB;QAChC,aAAQ,GAAR,QAAQ,CAAY;QAZ9B,YAAO,GAAG,EAAE,CAAC;QACb,YAAO,GAAG,EAAE,CAAC;QACb,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;QACf,eAAU,GAAG,EAAE,CAAC;QAGhB,cAAS,GAAG,EAAE,CAAC;IAOf,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,SAAS;QACT,IAAI,CAAC,YAAY,GAAG,IAAI,sCAAW,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,CAAC;YAChC,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,IAAI,sCAAW,CAAC,aAAa,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,CAAC;YACjC,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAED,qCAAQ,GAAR;QAEE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEhE,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,mCAAM,GAAN,UAAO,IAAY;QAAZ,mCAAY;QACjB,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;YACjE,IAAI,GAAG,GAAG,OAAO,CAAC;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9D;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAChD;IACH,CAAC;IA1DU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAauB,iEAAW;YACR,8DAAgB;YACtB,wDAAU;OAdnB,kBAAkB,CA4D9B;IAAD,yBAAC;CAAA;AA5D8B;;;;;;;;;;;;ACV/B,m1D;;;;;;;;;;;ACAA,6CAA6C,qBAAqB,oBAAoB,oBAAoB,GAAG,gCAAgC,uBAAuB,GAAG,4BAA4B,QAAQ,iBAAiB,KAAK,SAAS,mBAAmB,KAAK,UAAU,iBAAiB,KAAK,GAAG,oBAAoB,QAAQ,iBAAiB,KAAK,SAAS,mBAAmB,KAAK,UAAU,iBAAiB,KAAK,GAAG,kBAAkB,8CAA8C,8CAA8C,GAAG,gBAAgB,oBAAoB,sBAAsB,qBAAqB,0BAA0B,sBAAsB,sBAAsB,GAAG,WAAW,wBAAwB,gBAAgB,GAAG,gBAAgB,6CAA6C,gBAAgB,iBAAiB,GAAG,yDAAyD,qBAAqB,GAAG,6BAA6B,qBAAqB,wBAAwB,mBAAmB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/6B;AACgE;AAClD;AACH;AACH;AACZ;AAOzD;IASE,2BACU,WAAwB,EACxB,cAAgC,EAChC,YAA4B;QAF5B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAkB;QAChC,iBAAY,GAAZ,YAAY,CAAgB;QAPtC,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG,EAAE,CAAC;IAOjB,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,sCAAU,GAAV,UAAW,IAAuB;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;IAC/B,CAAC;IAED,mCAAO,GAAP,UAAQ,KAAwB;IAChC,CAAC;IAED,OAAO;IACP,qCAAS,GAAT,UAAU,KAAwB;QAChC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;IAChC,CAAC;IAED,OAAO;IACP,mCAAO,GAAP;QAAA,iBAoBC;QAlBC,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YACrC,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,sFAAmB;YAC9B,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,KAAK;YACjB,cAAc,EAAE,KAAK;YACrB,OAAO,EAAE,GAAG;YACZ,iBAAiB,EAAE;gBACjB,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE;aAC3B;SACF,CAAC,CAAC;QAEH,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,QAAQ;YAClC,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnC,KAAI,CAAC,KAAK,GAAO,KAAI,CAAC,KAAK,SAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;aAC/C;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,UAAU;IACV,qCAAS,GAAT,UAAU,KAAY,EAAE,GAAW;QACjC,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,OAAO,CAAC,cAAI;gBAChB,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;oBACnB,KAAK,GAAG,IAAI,CAAC;iBACd;YACH,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO;IACP,oCAAQ,GAAR;QAAA,iBAmCC;QAjCC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,OAAO;SACR;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YACrC,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,sFAAmB;YAC9B,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,KAAK;YACjB,OAAO,EAAE,GAAG;YACZ,iBAAiB,EAAE;gBACjB,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM;gBACtC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE;aAC3B;SACF,CAAC,CAAC;QAEH,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YAC9B,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO;aACR;YAED,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,KAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,kBAAQ;gBAC1C,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE;oBAC3D,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpB;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC/B;YACH,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;IACP,sCAAU,GAAV;QAAA,iBAUC;QATC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;YAChC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,OAAO;SACR;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI;YACjC,OAAO,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,KAAK;IACL,qCAAS,GAAT;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;IAED,KAAK;IACL,oCAAQ,GAAR;QAEE;;;;;WAKG;QAPL,iBAaC;QAJC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,aAAG;YAChC,OAAO,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;IACX,mCAAO,GAAP;QACE,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;gBACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ;IACR,sCAAU,GAAV;QACE,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE;YAC/C,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,cAAI;gBACtC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBAE1B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;oBACf,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;iBACxB;YAEH,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,yCAAa,GAAb,UAAc,IAAI;QAChB,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,wCAAY,GAAZ;QACE,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE;YAC/C,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,cAAI;gBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACnC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;YACxB,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,wCAAY,GAAZ;QACE,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAElC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;gBACrC,OAAO,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,MAAM;gBACvC,SAAS,EAAE,mFAAkB;gBAC7B,QAAQ,EAAE,IAAI;gBACd,cAAc,EAAE,KAAK;gBACrB,OAAO,EAAE,KAAK;gBACd,iBAAiB,EAAE;oBACjB,OAAO,EAAE,OAAO;oBAChB,KAAK,EAAE,IAAI,CAAC,SAAS;iBACtB;aACF,CAAC,CAAC;SACJ;IACH,CAAC;IAED,eAAe;IACf,oCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YACrC,OAAO,EAAE,iBAAiB;YAC1B,SAAS,EAAE,gFAAiB;YAC5B,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,KAAK;YACrB,OAAO,EAAE,GAAG;YACZ,iBAAiB,EAAE,EAClB;SACF,CAAC,CAAC;QAEH,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,GAAG;YAC7B,IAAI,GAAG,EAAE;gBACP,IAAI,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAChD,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA7NqB;QAArB,+DAAS,CAAC,SAAS,CAAC;kCAAU,6DAAe;sDAAC;IAHpC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAWuB,iEAAW;YACR,8DAAgB;YAClB,4DAAc;OAZ3B,iBAAiB,CAkO7B;IAAD,wBAAC;CAAA;AAlO6B;;;;;;;;;;;;ACZ9B,6L;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAME;QAJA,aAAQ,GAAG,EAAE,CAAC;QACd,WAAM,GAAG,EAAE,CAAC;QACZ,cAAS,GAAG,EAAE,GAAI,IAAI,CAAC,QAAQ,CAAC;IAEhB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IATU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAWzB;IAAD,oBAAC;CAAA;AAXyB;;;;;;;;;;;;ACP1B,4LAA4L,UAAU,4TAA4T,iBAAiB,sSAAsS,iBAAiB,oeAAoe,iBAAiB,0OAA0O,iBAAiB,iKAAiK,iBAAiB,qKAAqK,iBAAiB,8YAA8Y,iBAAiB,2VAA2V,iBAAiB,mZAAmZ,iBAAiB,8LAA8L,iBAAiB,4VAA4V,iBAAiB,6KAA6K,YAAY,eAAe,YAAY,0RAA0R,iBAAiB,ie;;;;;;;;;;;ACA5oI,0BAA0B,qBAAqB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACW;AAC9B;AAO/B;IAgBE,6BACU,QAAoB,EACpB,cAAgC;QADhC,aAAQ,GAAR,QAAQ,CAAY;QACpB,mBAAc,GAAd,cAAc,CAAkB;QAhB1C,gBAAW,GAAG,EAAE,CAAC;QACjB,WAAM,GAAG,EAAE,CAAC;QACZ,YAAO,GAAG,EAAE,CAAC;QACb,UAAK,GAAG,IAAI,CAAC;QACb,mBAAc,GAAG,EAAE,CAAC;QACpB,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG;YACV,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,QAAQ;SACpB,CAAC;QACF,UAAU;QACV,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;IAKZ,CAAC;IAEL,sCAAQ,GAAR;QAEE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEvC,IAAI,CAAC,cAAc,GAAG;YACpB,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;YAC7B,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;SAG/B,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAEhD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAEtD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACtB,QAAQ;YACR,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG;gBACnB,QAAQ,EAAE,GAAG;gBACb,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,oBAAoB;gBAC1B,KAAK,EAAE,SAAS;aACjB,CAAC;YAEF,QAAQ;YACR,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG;gBACnB,GAAG,EAAE,CAAC;gBACN,GAAG,EAAE,GAAG;aACT,CAAC;SACH;IACH,CAAC;IAED,0CAAY,GAAZ;QAEE,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,IAAI,SAAS,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC9D,IAAI,QAAQ,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC5D,IAAI,SAAS,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC/D,IAAI,QAAQ,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC5D,IAAI,QAAQ,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC5D,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC1D,IAAI,WAAW,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAGlE,IAAI,aAAa,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACpE,IAAI,iBAAiB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACzE,IAAI,kBAAkB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC1E,IAAI,kBAAkB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC3E,IAAI,kBAAkB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC1E,IAAI,gBAAgB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACvE,IAAI,iBAAiB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QACvE,IAAI,gBAAgB,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAEvE,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpD,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpD,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAElD,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC3C,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC5C,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC3C,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE1C,IAAI,UAAU,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC9D,IAAI,iBAAiB,GAAG,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,yBAAyB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAChG,IAAI,iBAAiB,GAAG,EAAE,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,kCAAkC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAClH,IAAI,iBAAiB,GAAG,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,6BAA6B,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAExG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5C,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5C,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE5C,IAAI,UAAU,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC9D,IAAI,iBAAiB,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACxF,IAAI,iBAAiB,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAElF,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5C,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE5C,IAAI,SAAS,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC5D,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAErE,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEnC,IAAI,WAAW,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACvE,IAAI,WAAW,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACxE,IAAI,UAAU,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACrE,IAAI,UAAU,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACtE,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC/D,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAEhE,IAAI,eAAe,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QACpE,IAAI,mBAAmB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC5E,IAAI,kBAAkB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAE1E,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7C,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7C,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC5C,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAG3C,IAAI,MAAM,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC5D,IAAI,MAAM,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAE7D,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/B,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/B,IAAI,YAAY,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACzE,IAAI,eAAe,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACtE,IAAI,cAAc,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACpE,IAAI,WAAW,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAE9D,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACpC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACtC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEnC,IAAI,mBAAmB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC1E,IAAI,qBAAqB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC7E,IAAI,iBAAiB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QACpE,IAAI,mBAAmB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QACxE,IAAI,gBAAgB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAEpE,IAAI,WAAW,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACtE,IAAI,WAAW,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACjE,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE7C,IAAI,aAAa,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAC3E,IAAI,aAAa,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACtE,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjD,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEjD,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC/C,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACjD,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7C,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC/C,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE5C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtB,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAExB,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAEzC,CAAC;IAED,sCAAQ,GAAR,UAAS,GAAG;QACV,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,0CAAY,GAAZ,UAAa,GAAG;QACd,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,wCAAU,GAAV,UAAW,GAAG;QACZ,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,wCAAU,GAAV;QAEE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;YACxB,OAAO;SACR;QAED,IAAI,IAAI,GAAG;YACT,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAC3B,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YACzB,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACrB,KAAK;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAEtB;aAAM;YACL,KAAK;YACL,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,2CAAS,CAAC,OAAO,CAAC,CAAC;gBACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC;aACpC;SACF;IACH,CAAC;IAGD,OAAO;IACP,0CAAY,GAAZ;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACzB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC;YACpC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE;YAC5C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,oEAAoE,CAAC;YAC/F,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,MAAM,IAAI,MAAM,EAAE;gBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBAC1C,OAAO,KAAK,CAAC;aACd;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU;IACV,0CAAY,GAAZ,UAAa,OAAe;QAC1B,IAAI,GAAG,GAAG,4BAA4B;QACtC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,2CAAa,GAAb,UAAc,IAAI;QAChB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC3C,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAGD,uCAAS,GAAT,UAAU,IAAI;QACZ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,mCAAK,GAAL;QACE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B;IACH,CAAC;IAED,cAAc;IACd,+CAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;IACzC,CAAC;IA3SU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAkBoB,wDAAU;YACJ,8DAAgB;OAlB/B,mBAAmB,CA6S/B;IAAD,0BAAC;CAAA;AA7S+B;;;;;;;;;;;;ACThC,krB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACW;AAO7D;IAOE,2BACU,QAAoB,EACpB,cAAgC;QADhC,aAAQ,GAAR,QAAQ,CAAY;QACpB,mBAAc,GAAd,cAAc,CAAkB;QAP1C,QAAG,GAAG,EAAE,CAAC;QACT,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,CAAC,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;IAKV,CAAC;IAEL,oCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,8HAA8H,CAAC;IACpJ,CAAC;IAED,iCAAK,GAAL;QACE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SACvC;aAAM;YAEL,2CAA2C;YAC3C,IAAI,SAAS,GAAG,qBAAqB;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC7C,OAAO;aACR;YAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACjC;IACH,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IAvCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCASoB,wDAAU;YACJ,8DAAgB;OAT/B,iBAAiB,CAyC7B;IAAD,wBAAC;CAAA;AAzC6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRa;AACZ;AAK/B;IAEE;IAAgB,CAAC;IAEjB,OAAO;IACP,8BAAQ,GAAR,UAAS,OAAO,EAAE,KAAU;QAA5B,iBAcC;QAdiB,kCAAU;QAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAEtB,OAAO,CAAC,OAAO,CAAC,gBAAM;gBACpB,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC3B,IAAI,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACpD,WAAW,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;gBACjD,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SAEJ;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS;IACD,8BAAQ,GAAhB,UAAiB,MAAM,EAAE,OAAO;QAC9B,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1B,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;YAC1B,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAEO,6BAAO,GAAf,UAAgB,IAAI,EAAE,MAAM,EAAE,IAAI;QAChC,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YACvB,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,EAAE;gBACb,QAAQ,GAAG,EAAE,CAAC;aACf;YACD,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YACtB,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAGO,mCAAa,GAArB,UAAsB,MAAM,EAAE,KAAK;QACjC,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC/C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpB;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,oBAAoB;IACZ,qCAAe,GAAvB,UAAwB,MAAM,EAAE,KAAK;QACnC,IAAI,IAAI,CAAC;QACT,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QACpC,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,OAAO;YAEP,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAChB,KAAK,CAAC,KAAK,GAAG,KAAK;aACpB;YAED,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACjB,KAAK,CAAC,MAAM,GAAG,KAAK;aACrB;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gBACf,KAAK,CAAC,MAAM,GAAG,oBAAoB;aACpC;YAED,IAAI,KAAK,CAAC,QAAQ,IAAI,GAAG,EAAE;gBACzB,KAAK,CAAC,KAAK,GAAG,2CAAS,CAAC,QAAQ,CAAC,CAAC;aACnC;YAED,IAAI,QAAQ,GAAM,IAAI,UAAK,KAAK,CAAC,KAAK,SAAI,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,KAAK,UAAK,KAAK,CAAC,IAAI,MAAG,CAAC;YAC1F,IAAI,GAAG,2CAAS,CAAC,QAAQ,CAAC,CAAC;SAE5B;aAAM,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,EAAE;YAC7E,OAAO;YACP,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO;YACP,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,EAAE;gBAC5B,IAAI,QAAQ,GAAM,IAAI,SAAI,GAAG,UAAK,GAAG,MAAG,CAAC;gBACzC,IAAI,GAAG,2CAAS,CAAC,QAAQ,CAAC,CAAC;aAE5B;iBAAM;gBACL,IAAI,GAAG,2CAAS,CAAC,IAAI,CAAC,CAAC;aACxB;SAEF;aAAM,IAAI,IAAI,IAAI,OAAO,EAAE;YAC1B,OAAO;YACP,IAAI,QAAQ,GAAG,oDAAoD,CAAC;YACpE,IAAI,QAAQ,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;YACtC,IAAI,GAAG,2CAAS,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YACrC,IAAI,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBAC/B,IAAI,GAAG,YAAY,CAAC;aACrB;SACF;aAAM;YACL,OAAO;YACP,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,QAAQ,CAAC,EAAE;gBACrE,oBAAoB;gBACpB,IAAI,QAAQ,GAAM,IAAI,SAAI,MAAM,CAAC,cAAc,CAAC,MAAG,CAAC;gBACpD,IAAI,GAAG,2CAAS,CAAC,QAAQ,CAAC,CAAC;aAC5B;iBAAM,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE;gBACjC,YAAY;gBACZ,IAAI,GAAG,EAAE,SAAS,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;gBACxD,IAAI,GAAG,2CAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;aACjC;iBAAM;gBACL,QAAQ;gBACR,IAAI,GAAG,2CAAS,CAAC,IAAI,CAAC,CAAC;aACxB;SAEF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW;IACX,mCAAa,GAAb,UAAc,QAAQ,EAAE,SAAkB;QAAlB,8CAAkB;QACxC,0BAA0B;QAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,QAAQ,CAAC,OAAO,CAAC,cAAI;YACnB,IAAI,SAAS,GAAG,iBAAe,SAAS,WAAM,MAAM,kBAAe,CAAC;YACpE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,eAAK;gBAC/B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC7B,SAAS,IAAO,KAAK,MAAG,CAAC;iBAC1B;qBAAM;oBACL,SAAS,IAAI,OAAI,KAAK,QAAI,CAAC;iBAC5B;YACH,CAAC,CAAC,CAAC;YACH,YAAY;YACZ,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACzD,SAAS,IAAI,KAAK;YAClB,SAAS,IAAI,SAAS,GAAG,IAAI;QAC/B,CAAC,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,SAAS;IACD,kCAAY,GAApB,UAAqB,MAAM;QACzB,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3C,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,iBAAiB;IACjB,mCAAa,GAAb,UAAc,GAAW;QAAzB,iBAwBC;QAvBC,YAAY;QACZ,IAAI,GAAG,GAAG,WAAW,CAAC;QACtB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC3B,IAAI,iBAAiB,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,kBAAkB,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC9C,aAAa;QACb,IAAI,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,iBAAiB,GAAG,CAAC,EAAE,kBAAkB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClF,IAAI,WAAW,GAAG,QAAQ,CAAC;QAC3B,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,OAAO,CAAC,OAAO,CAAC,gBAAM;YACpB,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,YAAY,GAAG,UAAU,CAAC,SAAS,CAAC,WAAC;gBACvC,OAAO,CAAC,CAAC,WAAW,EAAE,IAAI,SAAS,CAAC;YACtC,CAAC,CAAC,CAAC;YACH,IAAI,UAAU,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;YAC3E,IAAI,YAAY,IAAI,CAAC,EAAE;gBACrB,UAAU,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;aAC3E;YACD,IAAI,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACpC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,cAAc;IACN,6BAAO,GAAf,UAAgB,MAAM;QAEpB,IAAI,MAAM,GAAG;YACX,EAAE,EAAE,2CAAS,CAAC,OAAO,CAAC;YACtB,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;YACrB,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC;SAChC,CAAC;QACF,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC,GAAG;YACd,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,oBAAoB;YAC1B,KAAK,EAAE,SAAS;SACjB,CAAC;QAEF,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QAE5C,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACjC,MAAM;YACN,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SACvC;aAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACxC,KAAK;YACL,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;SACvD;aAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACvC,MAAM;YACN,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;SAClD;aAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE;YAC5J,kCAAkC;YAClC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAChD;aAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACxC,OAAO;YACP,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SACxC;aAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;YAC9B,gBAAgB;YAChB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,yBAAyB,CAAC,CAAC;SAC9D;aAAM,IAAI,QAAQ,KAAK,UAAU,EAAE;YAClC,yBAAyB;YACzB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,kCAAkC,CAAC,CAAC;SACvE;aAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACxC,KAAK;YACL,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;SACxD;aAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACzC,KAAK;YACL,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC7B;aAAM;YACL,cAAc;YACd,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SACvC;QAED,IAAI,IAAI,GAAG;YACT,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC;YACtB,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC;YACpB,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,MAAM;SACf,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAlPU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,WAAW,CAmPvB;IAAD,kBAAC;CAAA;AAnPuB;;;;;;;;;;;;;ACNxB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DataTreeComponent } from '../components/data-tree/data-tree.component';\nimport { HomeComponent } from '../components/home/home.component';\nimport { OptionFormComponent } from '../components/option-form/option-form.component';\nimport { DataTableComponent } from '../components/data-table/data-table.component';\nimport { SqlInputComponent } from '../components/sql-input/sql-input.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'tree',\n    component: DataTreeComponent\n  },\n  {\n    path: 'index',\n    component: HomeComponent\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/index'\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  declarations: [],\n  exports: [\n    RouterModule\n  ],\n  entryComponents: [OptionFormComponent, DataTableComponent, SqlInputComponent]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nz-layout class=\\\"layout\\\">\\n  <nz-header>\\n    <ul nz-menu [nzTheme]=\\\"'dark'\\\" [nzMode]=\\\"'horizontal'\\\" style=\\\"line-height: 64px;\\\">\\n      <li nz-menu-item><a routerLink=\\\"/\\\">首页</a></li>\\n      <li nz-menu-item><a href=\\\"https://github.com/zhongzhixing/fake-data\\\" target=\\\"_blank\\\"><i class=\\\"anticon anticon-github\\\"></i></a></li>\\n    </ul>\\n  </nz-header>\\n  <nz-content>\\n    <div id=\\\"content\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </nz-content>\\n  <nz-footer>\\n    <a href=\\\"http://github.com/zhongzhixing/\\\" target=\\\"_blank\\\">Fake Data ©{{year}} Implement By\\n      zhongzhixing</a>\\n  </nz-footer>\\n</nz-layout>\"","module.exports = \"#content {\\n  margin-top: 20px;\\n  min-height: 500px;\\n}\\nnz-header {\\n  position: fixed;\\n  width: 100%;\\n  z-index: 923;\\n}\\nnz-content {\\n  padding: 0 50px;\\n  margin-top: 64px;\\n  background-color: #f0f2f5;\\n}\\nnz-footer {\\n  text-align: center;\\n  background-color: black;\\n  position: fixed;\\n  width: 100%;\\n  left: 0;\\n  bottom: 0;\\n  z-index: -1;\\n}\\nnz-footer a {\\n  color: white;\\n}\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  year = new Date().getFullYear();\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgZorroAntdModule, NZ_I18N, zh_CN } from 'ng-zorro-antd';\nimport { registerLocaleData } from '@angular/common';\nimport zh from '@angular/common/locales/zh';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { DataTreeComponent } from './components/data-tree/data-tree.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OptionFormComponent } from './components/option-form/option-form.component';\nimport { DataTableComponent } from './components/data-table/data-table.component';\nimport { SqlInputComponent } from './components/sql-input/sql-input.component';\n\n\nregisterLocaleData(zh);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DataTreeComponent,\n    HomeComponent,\n    OptionFormComponent,\n    DataTableComponent,\n    SqlInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, ReactiveFormsModule,\n    HttpClientModule,\n    NgZorroAntdModule,\n    AppRoutingModule\n  ],\n  providers: [{ provide: NZ_I18N, useValue: zh_CN }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div nz-row>\\n  <div nz-col nzSpan=\\\"1\\\">\\n    <button nz-button (click)=\\\"refresh()\\\"><i class=\\\"anticon anticon-reload\\\"></i></button>\\n  </div>\\n  <div nz-col nzSpan=\\\"3\\\">\\n    <input nz-input placeholder=\\\"表名\\\" [(ngModel)]=\\\"tableName\\\" nz-tooltip nzTitle=\\\"输入表名\\\" nzPlacement=\\\"bottom\\\">\\n  </div>\\n  <div nz-col nzSpan=\\\"4\\\">\\n    <button nz-button (click)=\\\"copyAs()\\\" class=\\\"copyAsSql\\\" data-clipboard-action=\\\"copy\\\" data-clipboard-target=\\\"#sql\\\">复制为INSERT语句</button>\\n  </div>\\n  <div nz-col nzSpan=\\\"2\\\">\\n    <button nz-button (click)=\\\"copyAs('json')\\\" class=\\\"copyAsJson\\\" data-clipboard-action=\\\"copy\\\" data-clipboard-target=\\\"#json\\\">复制为JSON</button>\\n  </div>\\n</div>\\n<br>\\n<nz-table #table nzBordered [nzData]=\\\"dataSet\\\" [nzPageSize]=\\\"10\\\">\\n  <thead>\\n    <tr *ngIf='options'>\\n      <th *ngFor='let option of options'>{{option['title']}}</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let data of table.data\\\">\\n      <td *ngFor='let option of options'>\\n        <span *ngIf=\\\"option['type'][0] != '@image' \\\">{{data[option['title']]}}</span>\\n        <img *ngIf=\\\"option['type'][0] == '@image' \\\" src=\\\"{{data[option['title']]}}\\\">\\n      </td>\\n    </tr>\\n  </tbody>\\n</nz-table>\\n<br>\\n<textarea id=\\\"sql\\\" nz-input [(ngModel)]=\\\"copiedSql\\\" nzAutosize></textarea>\\n<textarea id=\\\"json\\\" nz-input [(ngModel)]=\\\"copiedJson\\\" nzAutosize></textarea>\"","module.exports = \"#sql,\\n#json {\\n  opacity: 0;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: -1;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../service/data.service';\nimport { NzMessageService, NzModalRef } from 'ng-zorro-antd';\nimport * as ClipboardJS from 'clipboard';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.less']\n})\nexport class DataTableComponent implements OnInit {\n\n  dataSet = [];\n  options = [];\n  count = 10;\n  copiedSql = '';\n  copiedJson = '';\n  sqlClipBoard;\n  jsonClipBoard;\n  tableName = '';\n\n  constructor(\n    private dataService: DataService,\n    private messageService: NzMessageService,\n    private modalRef: NzModalRef\n  ) {\n  }\n\n  ngOnInit() {\n    this.loadData();\n\n    // 复制到剪切版\n    this.sqlClipBoard = new ClipboardJS('.copyAsSql');\n    this.sqlClipBoard.on('success', (e) => {\n      this.messageService.success('已复制至剪切板');\n    });\n\n    this.jsonClipBoard = new ClipboardJS('.copyAsJson');\n    this.jsonClipBoard.on('success', (e) => {\n      this.messageService.success('已复制至剪切板');\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.sqlClipBoard.destroy();\n    this.jsonClipBoard.destroy();\n  }\n\n  loadData() {\n\n    this.dataSet = this.dataService.generate(this.options, this.count);\n    this.copiedSql = this.dataService.generateAsSQL(this.dataSet);\n\n  }\n\n  refresh() {\n    this.loadData();\n  }\n\n  copyAs(type = 'sql') {\n    if (type === 'sql') {\n      this.tableName = this.tableName === '' ? 'demo' : this.tableName;\n      let reg = /demo/g;\n      this.copiedSql = this.copiedSql.replace(reg, this.tableName);\n    } else {\n      this.copiedJson = JSON.stringify(this.dataSet);\n    }\n  }\n\n}\n","module.exports = \"<div nz-row nzGutter=\\\"8\\\">\\n  <div nz-col nzSpan=\\\"3\\\">\\n    <button nz-button nzType=\\\"default\\\" (click)=\\\"addNode()\\\">添加</button>\\n  </div>\\n  <div nz-col nzSpan=\\\"5\\\">\\n    <button nz-button nzType=\\\"default\\\" (click)=\\\"inputSql()\\\">SQL CREATE</button>\\n  </div>\\n  <div nz-col nzSpan=\\\"3\\\">\\n    <button nz-button nzType=\\\"default\\\" (click)=\\\"editNode()\\\">编辑</button>\\n  </div>\\n  <div nz-col nzSpan=\\\"3\\\">\\n    <button nz-button nzType=\\\"default\\\" (click)=\\\"selectAll()\\\">全选</button>\\n  </div>\\n  <div nz-col nzSpan=\\\"3\\\">\\n    <button nz-button nzType=\\\"default\\\" (click)=\\\"unselect()\\\">反选</button>\\n  </div>\\n  <div nz-col nzSpan=\\\"3\\\">\\n    <button nz-button nzType=\\\"danger\\\" (click)=\\\"deleteNode()\\\">删除</button>\\n  </div>\\n  <div nz-col nzSpan=\\\"4\\\">\\n    <nz-input-group nzCompact>\\n      <nz-input-number [(ngModel)]=\\\"dataCount\\\" [nzMin]=\\\"1\\\" [nzMax]=\\\"10000\\\" [nzStep]=\\\"1\\\"></nz-input-number>\\n      <button nz-button nzType=\\\"primary\\\" (click)=\\\"generateData()\\\" nz-tooltip nzTitle=\\\"有效范围为[1, 10000]\\\" nzPlacement=\\\"right\\\">生成</button>\\n    </nz-input-group>\\n  </div>\\n</div>\\n<br>\\n<nz-card>\\n  <nz-input-group [nzSuffix]=\\\"suffixIcon\\\">\\n    <input type=\\\"text\\\" nz-input placeholder=\\\"输入关键字搜索\\\" [(ngModel)]=\\\"searchValue\\\">\\n  </nz-input-group>\\n  <ng-template #suffixIcon>\\n    <i class=\\\"anticon anticon-search\\\"></i>\\n  </ng-template>\\n  <nz-tree #treeCom [nzData]=\\\"nodes\\\" nzCheckable=\\\"true\\\" nzShowLine=\\\"true\\\" nzDraggable=\\\"true\\\" [nzCheckedKeys]=\\\"checkedKeys\\\"\\n    (nzOnDragStart)=\\\"nzEvent($event)\\\" (nzOnDragEnter)=\\\"nzEvent($event)\\\" (nzOnDragLeave)=\\\"nzEvent($event)\\\" (nzOnDrop)=\\\"nzEvent($event)\\\"\\n    (nzOnDragEnd)=\\\"nzEvent($event)\\\" (nzSearchValueChange)=\\\"nzEvent($event)\\\" [nzSearchValue]=\\\"searchValue\\\" (nzClick)=\\\"activeNode($event)\\\"\\n    (nzCheckBoxChange)=\\\"checkNode($event)\\\">\\n  </nz-tree>\\n</nz-card>\"","module.exports = \":host ::ng-deep .ant-tree {\\n  overflow: hidden;\\n  margin: 0 -24px;\\n  padding: 0 24px;\\n}\\n:host ::ng-deep .ant-tree li {\\n  padding: 4px 0 0 0;\\n}\\n@-webkit-keyframes shine {\\n  0% {\\n    opacity: 1;\\n  }\\n  50% {\\n    opacity: 0.5;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n@keyframes shine {\\n  0% {\\n    opacity: 1;\\n  }\\n  50% {\\n    opacity: 0.5;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n.shine-animate {\\n  -webkit-animation: shine 2s ease infinite;\\n          animation: shine 2s ease infinite;\\n}\\n.custom-node {\\n  cursor: pointer;\\n  line-height: 26px;\\n  margin-left: 4px;\\n  display: inline-block;\\n  margin: 0 -1000px;\\n  padding: 0 1000px;\\n}\\n.active {\\n  background: #1890FF;\\n  color: #fff;\\n}\\n.is-dragging {\\n  background-color: transparent !important;\\n  color: #000;\\n  opacity: 0.7;\\n}\\n.file-name,\\n.folder-name,\\n.file-desc,\\n.folder-desc {\\n  margin-left: 4px;\\n}\\n.file-desc,\\n.folder-desc {\\n  padding: 2px 8px;\\n  background: #87CEFF;\\n  color: #FFFFFF;\\n}\\n\"","import { OnInit, Component, ViewChild } from '@angular/core';\nimport { NzFormatEmitEvent, NzTreeComponent, NzTreeNode, NzMessageService, NzModalRef, NzModalService } from 'ng-zorro-antd';\nimport { OptionFormComponent } from '../option-form/option-form.component';\nimport { DataTableComponent } from '../data-table/data-table.component';\nimport { SqlInputComponent } from '../sql-input/sql-input.component';\nimport { DataService } from '../../service/data.service';\n\n@Component({\n  selector: 'app-data-tree',\n  templateUrl: './data-tree.component.html',\n  styleUrls: ['./data-tree.component.less']\n})\nexport class DataTreeComponent implements OnInit {\n\n\n  @ViewChild('treeCom') treeCom: NzTreeComponent;\n  activedNode: NzTreeNode;\n  nodes = [];\n  dataCount = 10;\n  checkedKeys = [];\n\n  constructor(\n    private dataService: DataService,\n    private messageService: NzMessageService,\n    private modalService: NzModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.nodes = [];\n  }\n\n  activeNode(data: NzFormatEmitEvent): void {\n    this.activedNode = data.node;\n  }\n\n  nzEvent(event: NzFormatEmitEvent): void {\n  }\n\n  // 选中节点\n  checkNode(event: NzFormatEmitEvent) {\n    this.checkedKeys = event.keys;\n  }\n\n  // 添加节点\n  addNode() {\n\n    const modal = this.modalService.create({\n      nzTitle: '添加',\n      nzContent: OptionFormComponent,\n      nzFooter: null,\n      nzClosable: false,\n      nzMaskClosable: false,\n      nzWidth: 800,\n      nzComponentParams: {\n        treeObj: this.getTreeObj()\n      }\n    });\n\n    modal.afterClose.subscribe((dataList) => {\n      if (dataList && dataList.length > 0) {\n        this.nodes = [...this.nodes].concat(dataList);\n      }\n    });\n\n  }\n\n  // 节点 是否存在\n  existNode(nodes: any[], key: string) {\n    let exist = false;\n    if (nodes) {\n      nodes.forEach(node => {\n        if (node.key == key) {\n          exist = true;\n        }\n      });\n    }\n    return exist;\n  }\n\n  // 编辑节点\n  editNode() {\n\n    if (!this.activedNode) {\n      this.messageService.error(\"请选择\");\n      return;\n    }\n\n    const modal = this.modalService.create({\n      nzTitle: '编辑',\n      nzContent: OptionFormComponent,\n      nzFooter: null,\n      nzClosable: false,\n      nzWidth: 800,\n      nzComponentParams: {\n        option: this.activedNode.origin.option,\n        treeObj: this.getTreeObj()\n      }\n    });\n\n    modal.afterClose.subscribe((node) => {\n      if (!node) {\n        return;\n      }\n\n      let nodeArr = [];\n      this.treeCom.getTreeNodes().forEach(treeNode => {\n        if (treeNode.origin['option']['id'] == node['option']['id']) {\n          nodeArr.push(node);\n        } else {\n          nodeArr.push(treeNode.origin);\n        }\n      });\n\n      this.nodes = nodeArr;\n    });\n  }\n\n  // 删除节点\n  deleteNode() {\n    if (this.checkedKeys.length == 0) {\n      this.messageService.error(\"请选择\");\n      return;\n    }\n\n    this.nodes = this.nodes.filter(node => {\n      return this.checkedKeys.indexOf(node.key) < 0;\n    });\n\n  }\n\n  // 全选\n  selectAll() {\n    this.checkedKeys = this.getKeys();\n  }\n\n  // 反选\n  unselect() {\n\n    /**\n     * \n     * @TODO\n     * 全选后，不能反选\n     * \n     */\n\n    let keys = this.getKeys();\n    this.checkedKeys = keys.filter(key => {\n      return this.checkedKeys.indexOf(key) < 0;\n    });\n  }\n\n  // 获取所有 key\n  getKeys() {\n    let keys = [];\n    if (this.nodes) {\n      this.nodes.forEach(node => {\n        keys.push(node.key);\n      });\n    }\n    return keys;\n  }\n\n  // 获取树对象\n  getTreeObj() {\n    let obj = {};\n    if (this.treeCom && this.treeCom.getTreeNodes()) {\n      this.treeCom.getTreeNodes().forEach(node => {\n        let key = node.origin.key;\n\n        if (!!!obj[key]) {\n          obj[key] = node.origin;\n        }\n\n      });\n    }\n    return obj;\n  }\n\n  existPropName(node) {\n    let treeObj = this.getTreeObj();\n    if (treeObj.hasOwnProperty(node.title)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getOptionArr() {\n    let optionArr = [];\n    if (this.treeCom && this.treeCom.getTreeNodes()) {\n      this.treeCom.getTreeNodes().forEach(node => {\n        let option = node.origin['option'];\n        optionArr.push(option)\n      });\n    }\n\n    return optionArr;\n  }\n\n  generateData() {\n    let options = this.getOptionArr();\n\n    if (options.length > 0) {\n      const modal = this.modalService.create({\n        nzTitle: '共 ' + this.dataCount + ' 条数据',\n        nzContent: DataTableComponent,\n        nzFooter: null,\n        nzMaskClosable: false,\n        nzWidth: '90%',\n        nzComponentParams: {\n          options: options,\n          count: this.dataCount\n        }\n      });\n    }\n  }\n\n  // 打开 输入sql 模态框\n  inputSql() {\n    const modal = this.modalService.create({\n      nzTitle: '输入SQL CREATE 语句',\n      nzContent: SqlInputComponent,\n      nzFooter: null,\n      nzMaskClosable: false,\n      nzWidth: 800,\n      nzComponentParams: {\n      }\n    });\n\n    modal.afterClose.subscribe((sql) => {\n      if (sql) {\n        let nodes = this.dataService.getNodesBySql(sql);\n        this.nodes = nodes;\n      }\n    });\n  }\n\n}\n","module.exports = \"<div nz-row nzType=\\\"flex\\\" nzJustify=\\\"space-around\\\" [nzGutter]=\\\"gutter\\\">\\n  <div nz-col [nzSpan]=\\\"leftSpan\\\">\\n    <app-data-tree></app-data-tree>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.less']\n})\nexport class HomeComponent implements OnInit {\n\n  leftSpan = 20;\n  gutter = 16;\n  rightSpan = 24  - this.leftSpan;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div nz-row>\\n  <div nz-col nzSpan=\\\"20\\\" *ngIf=\\\"treeObj\\\">\\n    <nz-tag [nzColor]=\\\"'#87d068'\\\">已知属性:</nz-tag>\\n    <nz-tag *ngFor=\\\"let item of treeObj | keyvalue\\\">{{item.key}}</nz-tag>\\n  </div>\\n</div>\\n<br>\\n\\n<form>\\n  <div nz-row nzGutter=\\\"16\\\">\\n    <div nz-col nzOffset=\\\"3\\\" nzSpan=\\\"2\\\">\\n      <span class=\\\"label\\\">属性名:</span>\\n    </div>\\n    <div nz-col nzSpan=\\\"16\\\">\\n      <input required nz-input placeholder=\\\"数字不能放在属性名首位\\\" [(ngModel)]=\\\"option.title\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  </div>\\n  <br>\\n  <div nz-row nzGutter=\\\"16\\\">\\n    <div nz-col nzOffset=\\\"3\\\" nzSpan=\\\"2\\\">\\n      <span class=\\\"label\\\">类型:</span>\\n    </div>\\n    <div nz-col nzSpan=\\\"16\\\">\\n      <nz-cascader [nzExpandTrigger]=\\\"'hover'\\\" [nzOptions]=\\\"typeOptions\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [(ngModel)]=\\\"option.type\\\" (ngModelChange)=\\\"typeChanges($event)\\\">\\n      </nz-cascader>\\n    </div>\\n  </div>\\n  <br>\\n\\n  <div *ngIf=\\\"isImage\\\" nz-row nzGutter=\\\"16\\\">\\n    <div nz-col nzOffset=\\\"3\\\" nzSpan=\\\"2\\\">\\n      <span class=\\\"label\\\">图片属性:</span>\\n    </div>\\n    <div nz-col nzSpan=\\\"3\\\">\\n      <nz-input-number nz-tooltip nzTitle=\\\"图片宽度\\\" nzPlacement=\\\"bottom\\\" [nzMin]=\\\"1\\\" [nzMax]=\\\"2000\\\" [(ngModel)]=\\\"option.img.width\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"></nz-input-number>\\n    </div>\\n    <div nz-col nzSpan=\\\"3\\\">\\n      <nz-input-number nz-tooltip nzTitle=\\\"图片高度\\\" nzPlacement=\\\"bottom\\\" [nzMin]=\\\"1\\\" [nzMax]=\\\"2000\\\" [(ngModel)]=\\\"option.img.height\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"></nz-input-number>\\n    </div>\\n    <div nz-col nzSpan=\\\"4\\\">\\n      <input nz-input placeholder=\\\"图片文字\\\" [(ngModel)]=\\\"option.img.text\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div nz-col nzSpan=\\\"4\\\">\\n      <nz-select [ngModel]=\\\"option.img.isRandom\\\" (ngModelChange)=\\\"randomColorChange($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <nz-option [nzLabel]=\\\"'随机颜色'\\\" [nzValue]=\\\"'y'\\\"></nz-option>\\n        <nz-option [nzLabel]=\\\"'自选颜色'\\\" [nzValue]=\\\"'n'\\\"></nz-option>\\n      </nz-select>\\n    </div>\\n    <div *ngIf=\\\"option.img.isRandom == 'n'\\\" nz-col nzSpan=\\\"2\\\">\\n      <input type=\\\"color\\\" nz-input nz-tooltip nzTitle=\\\"图片颜色\\\" nzPlacement=\\\"right\\\" [(ngModel)]=\\\"option.img.color\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  </div>\\n  <br *ngIf=\\\"isImage\\\">\\n\\n  <div *ngIf=\\\"!isDefault && !isNum\\\" nz-row nzGutter=\\\"16\\\">\\n    <div nz-col nzOffset=\\\"3\\\" nzSpan=\\\"2\\\">\\n      <span class=\\\"label\\\">默认值:</span>\\n    </div>\\n    <div nz-col nzSpan=\\\"16\\\">\\n      <input nz-input placeholder=\\\"默认值\\\" [(ngModel)]=\\\"option.defaultValue\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [disabled]=\\\"isDefault\\\">\\n    </div>\\n  </div>\\n  <br *ngIf=\\\"!isDefault && !isNum\\\">\\n\\n  <div *ngIf=\\\"isNum\\\" nz-row nzGutter=\\\"16\\\">\\n    <div nz-col nzOffset=\\\"3\\\" nzSpan=\\\"2\\\">\\n      <span class=\\\"label\\\">范围:</span>\\n    </div>\\n    <div nz-col nzSpan=\\\"8\\\">\\n      <nz-input-number nz-tooltip nzTitle=\\\"最小值\\\" nzPlacement=\\\"bottom\\\" [(ngModel)]=\\\"option.num.min\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></nz-input-number>\\n    </div>\\n    <div nz-col nzSpan=\\\"8\\\">\\n      <nz-input-number nz-tooltip nzTitle=\\\"最大值\\\" nzPlacement=\\\"bottom\\\" [(ngModel)]=\\\"option.num.max\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></nz-input-number>\\n    </div>\\n  </div>\\n  <br *ngIf=\\\"isNum\\\">\\n\\n  <div *ngIf=\\\"isNum\\\" nz-row nzGutter=\\\"16\\\">\\n    <div nz-col nzOffset=\\\"3\\\" nzSpan=\\\"2\\\">\\n      <span class=\\\"label\\\">顺序:</span>\\n    </div>\\n    <div nz-col nzSpan=\\\"16\\\">\\n      <nz-select [(ngModel)]=\\\"option.sort\\\" nzAllowClear nzPlaceHolder=\\\"排序\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [nzDisabled]=\\\"!isNum\\\" nz-tooltip nzTitle=\\\"如果范围绝对值小于生成数据总数则顺序无效\\\" nzPlacement=\\\"right\\\">\\n        <nz-option *ngFor=\\\"let sort of sortSelections\\\" nzValue=\\\"{{sort.value}}\\\" nzLabel=\\\"{{sort.label}}\\\"></nz-option>\\n      </nz-select>\\n    </div>\\n  </div>\\n  <br>\\n  <!-- <div nz-row nzGutter=\\\"16\\\">\\n    <div nz-col nzSpan=\\\"4\\\">\\n      <span>按比例:</span>\\n    </div>\\n    <div nz-col nzSpan=\\\"16\\\">\\n      <nz-radio-group [(ngModel)]=\\\"option.isProportion\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <label nz-radio nzValue=\\\"true\\\">是</label>\\n        <label nz-radio nzValue=\\\"false\\\">否</label>\\n      </nz-radio-group>\\n    </div>\\n  </div>\\n\\n  <br> -->\\n  <div nz-row nzGutter=\\\"16\\\">\\n    <div nz-col nzOffset=\\\"5\\\" nzSpan=\\\"4\\\">\\n      <button nz-button nzType=\\\"default\\\" (click)=\\\"close()\\\">关闭</button>\\n    </div>\\n    <div nz-col nzSpan=\\\"4\\\">\\n      <button nz-button nzType=\\\"primary\\\" (click)=\\\"submitForm()\\\">确定</button>\\n    </div>\\n  </div>\\n\\n</form>\"","module.exports = \".label {\\n  line-height: 2.5;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NzModalRef, NzMessageService } from 'ng-zorro-antd';\nimport * as Mock from 'mockjs';\n\n@Component({\n  selector: 'app-option-form',\n  templateUrl: './option-form.component.html',\n  styleUrls: ['./option-form.component.less']\n})\nexport class OptionFormComponent implements OnInit {\n\n  typeOptions = [];\n  option = {};\n  treeObj = {};\n  isNum = true;\n  sortSelections = [];\n  dataList = [];\n  gridStyle = {\n    width: '25%',\n    textAlign: 'center'\n  };\n  // 是否能有默认值\n  isDefault = false;\n  isImage = false;\n\n  constructor(\n    private modalRef: NzModalRef,\n    private messageService: NzMessageService\n  ) { }\n\n  ngOnInit() {\n\n    this.typeOptions = this.buildOptions();\n\n    this.sortSelections = [\n      { label: '升序', value: 'asc' },\n      { label: '降序', value: 'desc' },\n      // { label: '递增', value: 'increment' },\n      // { label: '递减', value: 'decrement' }\n    ];\n\n    this.isNum = this.checkNum(this.option['type']);\n\n    this.isImage = this.checkImage(this.option['type']);\n\n    this.isDefault = this.checkImage(this.option['type']);\n\n    this.initOption();\n  }\n\n  initOption() {\n    if (!this.option['id']) {\n      // 图片初始化\n      this.option['img'] = {\n        isRandom: 'y',\n        width: 200,\n        height: 200,\n        text: 'This is my house !',\n        color: '#FF6600'\n      };\n\n      // 数字初始化\n      this.option['num'] = {\n        min: 0,\n        max: 100\n      };\n    }\n  }\n\n  buildOptions() {\n\n    let options = [];\n\n    let basicType = { label: '基本', value: 'basic', children: [] };\n    let dateType = { label: '日期', value: 'date', children: [] };\n    let imageType = { label: '图片', value: '@image', isLeaf: true };\n    let textType = { label: '文本', value: 'text', children: [] };\n    let nameType = { label: '姓名', value: 'name', children: [] };\n    let webType = { label: '网络', value: 'web', children: [] };\n    let addressType = { label: '地址', value: 'address', children: [] };\n\n\n    let basicIdOption = { label: 'guid', value: '@guid', isLeaf: true };\n    let basicStringOption = { label: '字符串', value: '@string', isLeaf: true };\n    let basicBooleanOption = { label: '布尔', value: '@boolean', isLeaf: true };\n    let basicNaturalOption = { label: '自然数', value: '@natural', isLeaf: true };\n    let basicIntegerOption = { label: '整数', value: '@integer', isLeaf: true };\n    let basicFloatOption = { label: '浮点数', value: '@float', isLeaf: true };\n    let basicNumberOption = { label: '数字', value: 'number', children: [] };\n    let basicPhoneOption = { label: '手机号码', value: 'phone', isLeaf: true };\n\n    basicNumberOption.children.push(basicIntegerOption);\n    basicNumberOption.children.push(basicNaturalOption);\n    basicNumberOption.children.push(basicFloatOption);\n\n    basicType.children.push(basicIdOption);\n    basicType.children.push(basicNumberOption);\n    basicType.children.push(basicBooleanOption);\n    basicType.children.push(basicStringOption);\n    basicType.children.push(basicPhoneOption);\n\n    let dateOption = { label: '日期', value: 'date', children: [] };\n    let dateFormatOption1 = { label: 'yyyy-MM-dd', value: '@datetime(\"yyyy-MM-dd\")', isLeaf: true };\n    let dateFormatOption2 = { label: 'yyyy-MM-dd HH:mm:ss', value: '@datetime(\"yyyy-MM-dd HH:mm:ss\")', isLeaf: true };\n    let dateFormatOption3 = { label: 'yyyyMMddHHmmss', value: '@datetime(\"yyyyMMddHHmmss\")', isLeaf: true };\n\n    dateOption.children.push(dateFormatOption1);\n    dateOption.children.push(dateFormatOption2);\n    dateOption.children.push(dateFormatOption3);\n\n    let timeOption = { label: '时间', value: 'time', children: [] };\n    let timeFormatOption1 = { label: 'HH:mm:ss', value: '@time(\"HH:mm:ss\")', isLeaf: true };\n    let timeFormatOption2 = { label: 'H:m:s', value: '@time(\"H:m:s\")', isLeaf: true };\n\n    timeOption.children.push(timeFormatOption1);\n    timeOption.children.push(timeFormatOption2);\n\n    let nowOption = { label: '当前', value: 'now', children: [] };\n    let nowTime = { label: '时刻', value: '@now(\"second\")', isLeaf: true };\n\n    nowOption.children.push(nowTime);\n\n    dateType.children.push(nowOption);\n    dateType.children.push(dateOption);\n    dateType.children.push(timeOption);\n\n    let enParagraph = { label: '英文段落', value: '@paragraph', isLeaf: true };\n    let chParagraph = { label: '中文段落', value: '@cparagraph', isLeaf: true };\n    let enSentence = { label: '英文句子', value: '@sentence', isLeaf: true };\n    let chSentence = { label: '中文句子', value: '@csentence', isLeaf: true };\n    let enTitle = { label: '英文标题', value: '@title', isLeaf: true };\n    let chTitle = { label: '中文标题', value: '@ctitle', isLeaf: true };\n\n    let textTitleOption = { label: '标题', value: 'title', children: [] };\n    let textParagraphOption = { label: '段落', value: 'paragraph', children: [] };\n    let textSentenceOption = { label: '句子', value: 'sentence', children: [] };\n\n    textTitleOption.children.push(enTitle);\n    textTitleOption.children.push(chTitle);\n    textParagraphOption.children.push(enParagraph);\n    textParagraphOption.children.push(chParagraph);\n    textSentenceOption.children.push(enSentence);\n    textSentenceOption.children.push(chSentence);\n\n    textType.children.push(textTitleOption);\n    textType.children.push(textParagraphOption);\n    textType.children.push(textSentenceOption);\n\n\n    let enName = { label: '英文名', value: '@name', isLeaf: true };\n    let chName = { label: '中文名', value: '@cname', isLeaf: true };\n\n    nameType.children.push(enName);\n    nameType.children.push(chName);\n\n    let webUrlOption = { label: 'URL', value: '@url(\"http\")', isLeaf: true };\n    let webDomainOption = { label: '域名', value: '@domain', isLeaf: true };\n    let webEmailOption = { label: '邮箱', value: '@email', isLeaf: true };\n    let webIpOption = { label: 'IP', value: '@ip', isLeaf: true };\n\n    webType.children.push(webUrlOption);\n    webType.children.push(webDomainOption);\n    webType.children.push(webEmailOption);\n    webType.children.push(webIpOption);\n\n    let addressRegionOption = { label: '地区', value: '@region', isLeaf: true };\n    let addressProvinceOption = { label: '省', value: '@province', isLeaf: true };\n    let addressCityOption = { label: '市', value: 'city', children: [] };\n    let addressCountyOption = { label: '县', value: 'county', children: [] };\n    let addressZipOption = { label: '邮编', value: '@zip', isLeaf: true };\n\n    let cityOption1 = { label: '带省', value: '@city(true)', isLeaf: true };\n    let cityOption2 = { label: '不带省', value: '@city', isLeaf: true };\n    addressCityOption.children.push(cityOption1);\n    addressCityOption.children.push(cityOption2);\n\n    let countyOption1 = { label: '带省市', value: '@county(true)', isLeaf: true };\n    let countyOption2 = { label: '不带省市', value: '@county', isLeaf: true };\n    addressCountyOption.children.push(countyOption1);\n    addressCountyOption.children.push(countyOption2);\n\n    addressType.children.push(addressRegionOption);\n    addressType.children.push(addressProvinceOption);\n    addressType.children.push(addressCityOption);\n    addressType.children.push(addressCountyOption);\n    addressType.children.push(addressZipOption);\n\n    options.push(basicType);\n    options.push(dateType);\n    options.push(textType);\n    options.push(nameType);\n    options.push(webType);\n    options.push(addressType);\n    options.push(imageType);\n\n    return options;\n  }\n\n  typeChanges(result) {\n    this.isNum = this.checkNum(result);\n    this.isDefault = this.checkDefault(result);\n    this.isImage = this.checkImage(result);\n\n  }\n\n  checkNum(arr) {\n    return (arr && arr[1] && arr[1] == 'number');\n  }\n\n  checkDefault(arr) {\n    return (arr && arr[0] && arr[0] == '@image');\n  }\n\n  checkImage(arr) {\n    return (arr && arr[0] && arr[0] == '@image');\n  }\n\n  submitForm() {\n\n    if (!this.validateForm()) {\n      return;\n    }\n\n    let data = {\n      title: this.option['title'],\n      key: this.option['title'],\n      isLeaf: true,\n      option: this.option\n    };\n\n    if (this.option['id']) {\n      // 编辑\n      this.closeMoal(data);\n\n    } else {\n      // 添加\n      if (!this.existPropName(data)) {\n        data.option['id'] = Mock.mock('@guid');\n        this.dataList.push(data)\n        this.option = {};\n        this.initOption();\n        this.treeObj[data.title] = data;\n      } else {\n        this.messageService.error('属性名已存在')\n      }\n    }\n  }\n\n\n  // 校验表单\n  validateForm() {\n    if (!this.option['title']) {\n      this.messageService.error('属性名不能为空')\n      return false;\n    }\n\n    if (!this.validVarible(this.option['title'])) {\n      this.messageService.error('属性名只能是字母(a-z A-Z)，数字(0-9)，下划线(_)，美元符号($)的组合，并且之间不能包含空格，数字不能放在属性名首位')\n      return false;\n    }\n\n    if (!this.option['type']) {\n      this.messageService.error('类型能为空');\n      return false;\n    }\n\n    if (this.isNum) {\n      let minNum = this.option['num']['min'];\n      let maxNum = this.option['num']['max'];\n      if (maxNum <= minNum) {\n        this.messageService.error('最大值不能小于等于最小值');\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // 属性名是否合法\n  validVarible(varible: string) {\n    let reg = /^[$_a-zA-Z][$_a-zA-Z0-9]*$/\n    return reg.test(varible);\n  }\n\n  existPropName(node) {\n    if (this.treeObj.hasOwnProperty(node.title)) {\n      return true;\n    }\n\n    return false;\n  }\n\n\n  closeMoal(data) {\n    this.modalRef.destroy(data);\n  }\n\n  close() {\n    if (this.option['id']) {\n      this.closeMoal(null);\n    } else {\n      this.closeMoal(this.dataList);\n    }\n  }\n\n  // 是否随机颜色下拉框变化\n  randomColorChange(value) {\n    this.option['img']['isRandom'] = value;\n  }\n\n}\n","module.exports = \"<div nz-row>\\n  <div nz-col nzOffset=\\\"2\\\" [nzSpan]=\\\"leftSpan\\\">\\n    <textarea rows=\\\"16\\\" nz-input [(ngModel)]=\\\"sql\\\" placeholder=\\\"可将SQL CREATE 语句粘贴至此\\\"></textarea>\\n  </div>\\n  <div nz-col nzOffset=\\\"1\\\" [nzSpan]=\\\"rightSpan\\\">\\n    <nz-alert nzType=\\\"error\\\" nzCloseable [nzMessage]=\\\"'提示'\\\" [nzDescription]=\\\"description\\\" (nzOnClose)=\\\"closeAlert()\\\">\\n    </nz-alert>\\n  </div>\\n</div>\\n<br>\\n<br>\\n<div nz-row>\\n  <div nz-col nzOffset=\\\"4\\\" nzSpan=\\\"8\\\">\\n    <button nz-button nzType=\\\"danger\\\" (click)=\\\"reset()\\\">重置</button>\\n  </div>\\n  <div nz-col nzSpan=\\\"8\\\">\\n    <button nz-button nzType=\\\"primary\\\" (click)=\\\"confirm()\\\">确定</button>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NzModalRef, NzMessageService } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'app-sql-input',\n  templateUrl: './sql-input.component.html',\n  styleUrls: ['./sql-input.component.less']\n})\nexport class SqlInputComponent implements OnInit {\n\n  sql = '';\n  description = '';\n  rightSpan = 4;\n  leftSpan = 16;\n\n  constructor(\n    private modalRef: NzModalRef,\n    private messageService: NzMessageService\n  ) { }\n\n  ngOnInit() {\n    this.description = \"1.请确保输入正确的SQL CREATE 语句.2.点击确定后将清空原属性.\\n3.目前支持SQL 数据类型有(*char, *text, *int, number, bool, image),如是其他类型默认处理为字符串类型\\n4.可编辑属性选项\";\n  }\n\n  reset() {\n    this.sql = '';\n  }\n\n  confirm() {\n    if (this.sql === '') {\n      this.messageService.error('sql 不能为空');\n    } else {\n\n      // 简单判断否是 sql create 语句; create table 开头 则是\n      let createReg = /^\\s*create\\s*table/i\n      if (!createReg.test(this.sql)) {\n        this.messageService.error('不是SQL CREATE 语句');\n        return;\n      }\n\n      this.modalRef.destroy(this.sql);\n    }\n  }\n\n  closeAlert() {\n    this.leftSpan = 20;\n    this.rightSpan = 0;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as Mock from 'mockjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() { }\n\n  // 生成数据\n  generate(options, count = 10) {\n    let result = [];\n    if (options.length > 0) {\n\n      options.forEach(option => {\n        let prop = option['title'];\n        let mockDataArr = this.mockMultiData(option, count);\n        mockDataArr = this.dealData(option, mockDataArr);\n        this.putData(prop, result, mockDataArr);\n      });\n\n    }\n\n    return result;\n  }\n\n  // 处理生成数据\n  private dealData(option, dataArr) {\n    let sort = option['sort'];\n    if (sort === 'asc') {\n      dataArr = dataArr.sort((a, b) => {\n        return a - b;\n      });\n    } else if (sort === 'desc') {\n      dataArr = dataArr.sort((a, b) => {\n        return b - a;\n      });\n    }\n    return dataArr;\n  }\n\n  private putData(prop, result, data) {\n    data.forEach((item, index) => {\n      let dataItem = result[index];\n      if (!dataItem) {\n        dataItem = {};\n      }\n      dataItem[prop] = item;\n      result[index] = dataItem;\n    })\n  }\n\n\n  private mockMultiData(option, count) {\n    let dataArr = [];\n    for (let i = 1; i <= count; i++) {\n      let data = this.getDataByOption(option, count);\n      dataArr.push(data);\n    }\n    return dataArr;\n  }\n\n  // 通过 option 判断，生成数据\n  private getDataByOption(option, count) {\n    let data;\n    let typeLen = option.type.length;\n    let type = option.type[typeLen - 1];\n    if (type == '@image') {\n      // 图片类型\n\n      let image = option.img;\n      if (!image.width) {\n        image.width = '200'\n      }\n\n      if (!image.height) {\n        image.height = '200'\n      }\n\n      if (!image.text) {\n        image.height = 'This is my house !'\n      }\n\n      if (image.isRandom == 'y') {\n        image.color = Mock.mock('@color');\n      }\n\n      let template = `${type}('${image.width}x${image.height}', ${image.color}, ${image.text})`;\n      data = Mock.mock(template);\n\n    } else if ((type == '@natural') || (type == '@integer') || (type == '@float')) {\n      // 数据类型\n      let num = option['num'];\n      let min = num['min'];\n      let max = num['max'];\n      // 存在范围\n      if (min !== '' && max !== '') {\n        let template = `${type}(${min}, ${max})`;\n        data = Mock.mock(template);\n\n      } else {\n        data = Mock.mock(type);\n      }\n\n    } else if (type == 'phone') {\n      // 手机类型\n      let phoneReg = /^1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}$/;\n      let template = { 'regexp': phoneReg };\n      data = Mock.mock(template)['regexp'];\n      let defaultValue = option['defaultValue'];\n      if (phoneReg.test(defaultValue)) {\n        data = defaultValue;\n      }\n    } else {\n      // 其他类型\n      if (option['defaultValue'] && (type == '@domain' || type == '@email')) {\n        // 如果有默认值，且类型为 域名或邮箱\n        let template = `${type}(${option['defaultValue']})`;\n        data = Mock.mock(template);\n      } else if (option['defaultValue']) {\n        // 有默认值，其他类型\n        type = { 'array|1': option['defaultValue'].split(',') };\n        data = Mock.mock(type)['array'];\n      } else {\n        // 没有默认值\n        data = Mock.mock(type);\n      }\n\n    }\n\n    return data;\n  }\n\n  // 生成为 sql \n  generateAsSQL(dataList, tableName = 'demo') {\n    // insert into table value\n    let colStr = this.getColumnStr(dataList[0]);\n    let resultSql = '';\n    dataList.forEach(item => {\n      let insertSql = `INSERT INTO ${tableName} ( ${colStr} ) VALUES  ( `;\n      Object.values(item).forEach(value => {\n        if (typeof value === 'number') {\n          insertSql += `${value},`;\n        } else {\n          insertSql += `\"${value}\",`;\n        }\n      });\n      // 把多余的 , 删除\n      insertSql = insertSql.substring(0, insertSql.length - 1);\n      insertSql += ` );`\n      resultSql += insertSql + '\\n'\n    });\n\n    return resultSql;\n  }\n\n  // 获取列字符串\n  private getColumnStr(record) {\n    let colStr = Object.keys(record).join(',');\n    return colStr;\n  }\n\n  // 解析 sql create \n  getNodesBySql(sql: string) {\n    // 去除 . [ ] \n    let reg = /[\\.\\[\\]]/g;\n    sql = sql.replace(reg, '');\n    let leftBracketsIndex = sql.indexOf('(');\n    let rightBracketsIndex = sql.lastIndexOf(')');\n    // 通过 , 分离每一列\n    let columns = sql.substring(leftBracketsIndex + 1, rightBracketsIndex).split(',');\n    let separateReg = /[\\s(]/g;\n    let nodes = [];\n    columns.forEach(column => {\n      let columnType = column.trim().split(separateReg);\n      let defaultIndex = columnType.findIndex(e => {\n        return e.toLowerCase() == 'default';\n      });\n      let columnInfo = { prop: columnType[0], type: columnType[1], default: '' };\n      if (defaultIndex >= 0) {\n        columnInfo['default'] = columnType[defaultIndex + 1].replace(/['\"]/g, '');\n      }\n      let node = this.getNode(columnInfo);\n      nodes.push(node);\n    });\n\n    return nodes;\n  }\n\n  // 通过 列 信息生成节点\n  private getNode(column) {\n\n    let option = {\n      id: Mock.mock('@guid'),\n      title: column['prop'],\n      defaultValue: column['default']\n    };\n    option['num'] = { min: 0, max: 100 };\n    option['img'] = {\n      isRandom: 'y',\n      width: 200,\n      height: 200,\n      text: 'This is my house !',\n      color: '#FF6600'\n    };\n\n    let dataType = column['type'].toLowerCase();\n\n    if (dataType.indexOf('char') >= 0) {\n      // 字符串\n      option['type'] = ['basic', '@string'];\n    } else if (dataType.indexOf('text') >= 0) {\n      // 文本\n      option['type'] = ['text', 'paragraph', '@cparagraph'];\n    } else if (dataType.indexOf('int') >= 0) {\n      // int\n      option['type'] = ['basic', 'number', '@integer'];\n    } else if ((dataType.indexOf('float') >= 0) || (dataType.indexOf('double') >= 0) || (dataType.indexOf('decimal') >= 0) || (dataType.indexOf('numeric') >= 0)) {\n      // float, double, decimal, numeric\n      option['type'] = ['basic', 'number', '@float'];\n    } else if (dataType.indexOf('bool') >= 0) {\n      // bool\n      option['type'] = ['basic', '@boolean'];\n    } else if (dataType === 'date') {\n      // 日期 yyyy-MM-dd\n      option['type'] = ['date', 'date', '@datetime(\"yyyy-MM-dd\")'];\n    } else if (dataType === 'datetime') {\n      // 日期 yyyy-MM-dd HH:mm:ss\n      option['type'] = ['date', 'date', '@datetime(\"yyyy-MM-dd HH:mm:ss\")'];\n    } else if (dataType.indexOf('time') >= 0) {\n      // 时间\n      option['type'] = ['date', 'time', '@time(\"HH:mm:ss\")'];\n    } else if (dataType.indexOf('image') >= 0) {\n      // 图片\n      option['type'] = ['@image'];\n    } else {\n      // 其他类型暂处理为字符串\n      option['type'] = ['basic', '@string'];\n    }\n\n    let node = {\n      title: option['title'],\n      key: option['title'],\n      isLeaf: true,\n      option: option\n    };\n    return node;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}